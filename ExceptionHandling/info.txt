Exception  ve error Throwable nesnesinden inherit edilirler.
Exception:Yazımız kodlara yönelik hatalardır. / Kodlarımızla kontrol altında tutabiliyoruz.
  Runtime exception(NullPointerException, arithmetic, classcast exception,indexoutofboundsexception), sql exception, IO EXCEPTİON , AWT Exception
  Tüm exceptionlar exception classından inherit edilir.
  Tüm exceptionlar inheritance yapısına sahiptir.
Error: VirtualMachineEError, IOError, AssertionError/Kodlarla müdahale edemeyeceğimiz alan /

---------------------------------------------------------------------------------------------------------------------------------------
To handle runtime errors such as ClassNotFoundException, IOException, SQLException, RemoteException, etc so that the regular flow of the application can be preserved.

In Java, Exception is an unwanted or unexpected event, which occurs during the execution of a program, i.e. at run time, that disrupts the normal flow of the program’s instructions.
Exceptions can be caught and handled by the program.
When an exception occurs within a method, it creates an object. This object is called the exception object (e) . It contains information about the exception, such as the name and description of the exception and the state of the program when the exception occurred.

Major reasons why an exception Occurs :
    Invalid user input
    Device failure
    Loss of network connection
    Physical limitations (out-of-disk memory)
    Code errors
    Opening an unavailable file

Errors represent irrecoverable conditions such as Java virtual machine (JVM) running out of memory, memory leaks, stack overflow errors, library incompatibility, infinite recursion, etc.
Errors are usually beyond the control of the programmer, and we should not try to handle errors.
---------------------------------------------------------------------------------------------------------------------------------------

Difference between Error and Exception
Let us discuss the most important part which is the differences between Error and Exception that is as follows:
  Error: An Error indicates a serious problem that a reasonable application should not try to catch.
  Exception: Exception indicates conditions that a reasonable application might try to catch.

----------------------------------------------------------------------------------------------------------------------------------------

Built-in Exceptions:

Built-in exceptions are the exceptions that are available in Java libraries. These exceptions are suitable to explain certain error situations. Below is the list of important built-in exceptions in Java.

    ArithmeticException: It is thrown when an exceptional condition has occurred in an arithmetic operation.
    ArrayIndexOutOfBoundsException: It is thrown to indicate that an array has been accessed with an illegal index. The index is either negative or greater than or equal to the size of the array.
    ClassNotFoundException: This Exception is raised when we try to access a class whose definition is not found
    FileNotFoundException: This Exception is raised when a file is not accessible or does not open.
    IOException: It is thrown when an input-output operation failed or interrupted
    InterruptedException: It is thrown when a thread is waiting, sleeping, or doing some processing, and it is interrupted.
    NoSuchFieldException: It is thrown when a class does not contain the field (or variable) specified
    NoSuchMethodException: It is thrown when accessing a method that is not found.
    NullPointerException: This exception is raised when referring to the members of a null object. Null represents nothing
    NumberFormatException: This exception is raised when a method could not convert a string into a numeric format.
    RuntimeException: This represents an exception that occurs during runtime.
    StringIndexOutOfBoundsException: It is thrown by String class methods to indicate that an index is either negative or greater than the size of the string
    IllegalArgumentException : This exception will throw the error or error statement when the method receives an argument which is not accurately fit to the given relation or condition. It comes under the unchecked exception.
    IllegalStateException : This exception will throw an error or error message when the method is not accessed for the particular operation in the application. It comes under the unchecked exception.







